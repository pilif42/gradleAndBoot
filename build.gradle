buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
		palantirVersion = '0.17.2'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"	// required for Palantir
		}
	}
	// Note the " below are essential. With single quotes, springBootVersion and palantirVersion are not recognised.
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${palantirVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: 'com.palantir.docker'

group = 'com.example'
version = '0.1.0-SNAPSHOT'

jar {
	baseName = 'gradle-and-boot'
	version =  '0.1.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web") {
		exclude module: "spring-boot-starter-tomcat"
	}
	compile("org.springframework.boot:spring-boot-starter-jetty")

	compile("org.springframework.boot:spring-boot-starter-actuator")

	compile("org.projectlombok:lombok")
	compile("ma.glasnost.orika:orika-core:1.5.2")

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.apache.commons:commons-io:1.3.2')
}

checkstyle {
	toolVersion "7.6.1"
}

docker {
	name "${project.group}/${jar.baseName}"
	tags '0.1.0-SNAPSHOT'
	dockerfile project.file('Dockerfile')
	files jar.archivePath
	buildArgs(['JAR_FILE': "${jar.archiveName}"])
}